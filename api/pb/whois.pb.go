// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.5
// source: whois.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//ReqMobile : mobile info and time
type ReqMobile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Area   string `protobuf:"bytes,2,opt,name=area,proto3" json:"area,omitempty"`
	Now    int64  `protobuf:"varint,3,opt,name=now,proto3" json:"now,omitempty"`
}

func (x *ReqMobile) Reset() {
	*x = ReqMobile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whois_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqMobile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMobile) ProtoMessage() {}

func (x *ReqMobile) ProtoReflect() protoreflect.Message {
	mi := &file_whois_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMobile.ProtoReflect.Descriptor instead.
func (*ReqMobile) Descriptor() ([]byte, []int) {
	return file_whois_proto_rawDescGZIP(), []int{0}
}

func (x *ReqMobile) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ReqMobile) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *ReqMobile) GetNow() int64 {
	if x != nil {
		return x.Now
	}
	return 0
}

//ReqWechat : wechat info and time
type ReqWechat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenID     string `protobuf:"bytes,1,opt,name=openID,proto3" json:"openID,omitempty"`
	AppID      string `protobuf:"bytes,2,opt,name=appID,proto3" json:"appID,omitempty"`
	NickName   string `protobuf:"bytes,3,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	Country    string `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Province   string `protobuf:"bytes,5,opt,name=province,proto3" json:"province,omitempty"`
	City       string `protobuf:"bytes,6,opt,name=city,proto3" json:"city,omitempty"`
	HeadImgUrl string `protobuf:"bytes,7,opt,name=head_img_url,json=headImgUrl,proto3" json:"head_img_url,omitempty"`
	Sex        int32  `protobuf:"varint,8,opt,name=sex,proto3" json:"sex,omitempty"`
	Now        int64  `protobuf:"varint,9,opt,name=now,proto3" json:"now,omitempty"`
}

func (x *ReqWechat) Reset() {
	*x = ReqWechat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whois_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqWechat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqWechat) ProtoMessage() {}

func (x *ReqWechat) ProtoReflect() protoreflect.Message {
	mi := &file_whois_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqWechat.ProtoReflect.Descriptor instead.
func (*ReqWechat) Descriptor() ([]byte, []int) {
	return file_whois_proto_rawDescGZIP(), []int{1}
}

func (x *ReqWechat) GetOpenID() string {
	if x != nil {
		return x.OpenID
	}
	return ""
}

func (x *ReqWechat) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ReqWechat) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *ReqWechat) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ReqWechat) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *ReqWechat) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ReqWechat) GetHeadImgUrl() string {
	if x != nil {
		return x.HeadImgUrl
	}
	return ""
}

func (x *ReqWechat) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *ReqWechat) GetNow() int64 {
	if x != nil {
		return x.Now
	}
	return 0
}

//ReqWechatBindMobile : bind wechat info and mobile
type ReqWechatBindMobile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Area   string `protobuf:"bytes,2,opt,name=area,proto3" json:"area,omitempty"`
	OpenID string `protobuf:"bytes,3,opt,name=openID,proto3" json:"openID,omitempty"`
	AppID  string `protobuf:"bytes,4,opt,name=appID,proto3" json:"appID,omitempty"`
	Now    int64  `protobuf:"varint,5,opt,name=now,proto3" json:"now,omitempty"`
}

func (x *ReqWechatBindMobile) Reset() {
	*x = ReqWechatBindMobile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whois_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqWechatBindMobile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqWechatBindMobile) ProtoMessage() {}

func (x *ReqWechatBindMobile) ProtoReflect() protoreflect.Message {
	mi := &file_whois_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqWechatBindMobile.ProtoReflect.Descriptor instead.
func (*ReqWechatBindMobile) Descriptor() ([]byte, []int) {
	return file_whois_proto_rawDescGZIP(), []int{2}
}

func (x *ReqWechatBindMobile) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ReqWechatBindMobile) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *ReqWechatBindMobile) GetOpenID() string {
	if x != nil {
		return x.OpenID
	}
	return ""
}

func (x *ReqWechatBindMobile) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *ReqWechatBindMobile) GetNow() int64 {
	if x != nil {
		return x.Now
	}
	return 0
}

//ReqMobileUID : set user_id of mobile
type ReqMobileUID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Area   string `protobuf:"bytes,2,opt,name=area,proto3" json:"area,omitempty"`
	UserID int32  `protobuf:"varint,3,opt,name=userID,proto3" json:"userID,omitempty"`
	Now    int64  `protobuf:"varint,4,opt,name=now,proto3" json:"now,omitempty"`
}

func (x *ReqMobileUID) Reset() {
	*x = ReqMobileUID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whois_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqMobileUID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMobileUID) ProtoMessage() {}

func (x *ReqMobileUID) ProtoReflect() protoreflect.Message {
	mi := &file_whois_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMobileUID.ProtoReflect.Descriptor instead.
func (*ReqMobileUID) Descriptor() ([]byte, []int) {
	return file_whois_proto_rawDescGZIP(), []int{3}
}

func (x *ReqMobileUID) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ReqMobileUID) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

func (x *ReqMobileUID) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ReqMobileUID) GetNow() int64 {
	if x != nil {
		return x.Now
	}
	return 0
}

//ReqNickname : update nick name
type ReqNickname struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int32  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	NickName string `protobuf:"bytes,2,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	Now      int64  `protobuf:"varint,3,opt,name=now,proto3" json:"now,omitempty"`
}

func (x *ReqNickname) Reset() {
	*x = ReqNickname{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whois_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqNickname) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqNickname) ProtoMessage() {}

func (x *ReqNickname) ProtoReflect() protoreflect.Message {
	mi := &file_whois_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqNickname.ProtoReflect.Descriptor instead.
func (*ReqNickname) Descriptor() ([]byte, []int) {
	return file_whois_proto_rawDescGZIP(), []int{4}
}

func (x *ReqNickname) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ReqNickname) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *ReqNickname) GetNow() int64 {
	if x != nil {
		return x.Now
	}
	return 0
}

//ReqAvatar : update avatar
type ReqAvatar struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int32  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Avatar string `protobuf:"bytes,2,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Now    int64  `protobuf:"varint,3,opt,name=now,proto3" json:"now,omitempty"`
}

func (x *ReqAvatar) Reset() {
	*x = ReqAvatar{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whois_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqAvatar) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAvatar) ProtoMessage() {}

func (x *ReqAvatar) ProtoReflect() protoreflect.Message {
	mi := &file_whois_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAvatar.ProtoReflect.Descriptor instead.
func (*ReqAvatar) Descriptor() ([]byte, []int) {
	return file_whois_proto_rawDescGZIP(), []int{5}
}

func (x *ReqAvatar) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *ReqAvatar) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *ReqAvatar) GetNow() int64 {
	if x != nil {
		return x.Now
	}
	return 0
}

//ReqUserKey : user key
type ReqUserKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int32 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *ReqUserKey) Reset() {
	*x = ReqUserKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whois_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqUserKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqUserKey) ProtoMessage() {}

func (x *ReqUserKey) ProtoReflect() protoreflect.Message {
	mi := &file_whois_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqUserKey.ProtoReflect.Descriptor instead.
func (*ReqUserKey) Descriptor() ([]byte, []int) {
	return file_whois_proto_rawDescGZIP(), []int{6}
}

func (x *ReqUserKey) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

//ReqMobileKey : mobile key
type ReqMobileKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Area   string `protobuf:"bytes,2,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *ReqMobileKey) Reset() {
	*x = ReqMobileKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whois_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqMobileKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMobileKey) ProtoMessage() {}

func (x *ReqMobileKey) ProtoReflect() protoreflect.Message {
	mi := &file_whois_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMobileKey.ProtoReflect.Descriptor instead.
func (*ReqMobileKey) Descriptor() ([]byte, []int) {
	return file_whois_proto_rawDescGZIP(), []int{7}
}

func (x *ReqMobileKey) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *ReqMobileKey) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

type RspUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	State     int32  `protobuf:"varint,2,opt,name=state,proto3" json:"state,omitempty"`
	NickName  string `protobuf:"bytes,3,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`
	Avatar    string `protobuf:"bytes,4,opt,name=avatar,proto3" json:"avatar,omitempty"`
	CreatedAt int64  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64  `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *RspUser) Reset() {
	*x = RspUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whois_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspUser) ProtoMessage() {}

func (x *RspUser) ProtoReflect() protoreflect.Message {
	mi := &file_whois_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspUser.ProtoReflect.Descriptor instead.
func (*RspUser) Descriptor() ([]byte, []int) {
	return file_whois_proto_rawDescGZIP(), []int{8}
}

func (x *RspUser) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *RspUser) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *RspUser) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *RspUser) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *RspUser) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *RspUser) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type RspMobile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mobile string `protobuf:"bytes,1,opt,name=mobile,proto3" json:"mobile,omitempty"`
	Area   string `protobuf:"bytes,2,opt,name=area,proto3" json:"area,omitempty"`
}

func (x *RspMobile) Reset() {
	*x = RspMobile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whois_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspMobile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspMobile) ProtoMessage() {}

func (x *RspMobile) ProtoReflect() protoreflect.Message {
	mi := &file_whois_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspMobile.ProtoReflect.Descriptor instead.
func (*RspMobile) Descriptor() ([]byte, []int) {
	return file_whois_proto_rawDescGZIP(), []int{9}
}

func (x *RspMobile) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *RspMobile) GetArea() string {
	if x != nil {
		return x.Area
	}
	return ""
}

type RspUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User    *RspUser     `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Mobiles []*RspMobile `protobuf:"bytes,2,rep,name=mobiles,proto3" json:"mobiles,omitempty"`
}

func (x *RspUserInfo) Reset() {
	*x = RspUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_whois_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RspUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspUserInfo) ProtoMessage() {}

func (x *RspUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_whois_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspUserInfo.ProtoReflect.Descriptor instead.
func (*RspUserInfo) Descriptor() ([]byte, []int) {
	return file_whois_proto_rawDescGZIP(), []int{10}
}

func (x *RspUserInfo) GetUser() *RspUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *RspUserInfo) GetMobiles() []*RspMobile {
	if x != nil {
		return x.Mobiles
	}
	return nil
}

var File_whois_proto protoreflect.FileDescriptor

var file_whois_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x21, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c,
	0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62,
	0x22, 0x49, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x6f, 0x77, 0x22, 0xe6, 0x01, 0x0a, 0x09,
	0x52, 0x65, 0x71, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x20,
	0x0a, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73,
	0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6e, 0x6f, 0x77, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e,
	0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x44,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x6f, 0x77, 0x22, 0x64, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x72, 0x65, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6e, 0x6f, 0x77, 0x22, 0x54,
	0x0a, 0x0b, 0x52, 0x65, 0x71, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x6e, 0x6f, 0x77, 0x22, 0x4d, 0x0a, 0x09, 0x52, 0x65, 0x71, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x6e, 0x6f, 0x77, 0x22, 0x24, 0x0a, 0x0a, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x65,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x3a, 0x0a, 0x0c, 0x52, 0x65, 0x71,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x61, 0x72, 0x65, 0x61, 0x22, 0xa2, 0x01, 0x0a, 0x07, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69, 0x63, 0x6b, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x37, 0x0a, 0x09, 0x52, 0x73,
	0x70, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x72, 0x65, 0x61, 0x22, 0x95, 0x01, 0x0a, 0x0b, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x3e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70,
	0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x07, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x52, 0x07, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x73, 0x32, 0xcd, 0x06, 0x0a, 0x07,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x12, 0x6e, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x42, 0x79, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63, 0x74, 0x78,
	0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x1a, 0x2e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77,
	0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x72, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x49,
	0x6e, 0x42, 0x79, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x2c, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61,
	0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63,
	0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x75, 0x0a, 0x15, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e,
	0x69, 0x41, 0x70, 0x70, 0x12, 0x2c, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x1a, 0x2e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e,
	0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x80, 0x01, 0x0a, 0x16, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x42, 0x79, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x36, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61,
	0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x42, 0x69, 0x6e, 0x64, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x1a, 0x2e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f,
	0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x83, 0x01, 0x0a, 0x19, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x42, 0x79, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69,
	0x41, 0x70, 0x70, 0x12, 0x36, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x1a, 0x2e, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63,
	0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x70, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61,
	0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x2e, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61,
	0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x6c, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x2c, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61,
	0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x1a, 0x2e, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63,
	0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e,
	0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x32, 0xe6, 0x02, 0x0a, 0x09,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x6f, 0x0a, 0x0c, 0x53, 0x65, 0x74,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55, 0x49, 0x44, 0x12, 0x2f, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63, 0x74, 0x78,
	0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x71, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x55, 0x49, 0x44, 0x1a, 0x2e, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63, 0x74,
	0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x70, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x49, 0x44, 0x12, 0x2d, 0x2e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61,
	0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x62, 0x2e, 0x52, 0x65, 0x71, 0x55, 0x73, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x1a, 0x2e, 0x2e, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c,
	0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x76, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x12, 0x2f, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x71, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x1a, 0x2e, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2e, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63, 0x74, 0x78, 0x2e, 0x77, 0x68, 0x6f, 0x69,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x73, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x6e, 0x65, 0x61, 0x6c, 0x63, 0x74, 0x78, 0x2f, 0x77, 0x68, 0x6f,
	0x69, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_whois_proto_rawDescOnce sync.Once
	file_whois_proto_rawDescData = file_whois_proto_rawDesc
)

func file_whois_proto_rawDescGZIP() []byte {
	file_whois_proto_rawDescOnce.Do(func() {
		file_whois_proto_rawDescData = protoimpl.X.CompressGZIP(file_whois_proto_rawDescData)
	})
	return file_whois_proto_rawDescData
}

var file_whois_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_whois_proto_goTypes = []interface{}{
	(*ReqMobile)(nil),           // 0: github.com.pinealctx.whois.api.pb.ReqMobile
	(*ReqWechat)(nil),           // 1: github.com.pinealctx.whois.api.pb.ReqWechat
	(*ReqWechatBindMobile)(nil), // 2: github.com.pinealctx.whois.api.pb.ReqWechatBindMobile
	(*ReqMobileUID)(nil),        // 3: github.com.pinealctx.whois.api.pb.ReqMobileUID
	(*ReqNickname)(nil),         // 4: github.com.pinealctx.whois.api.pb.ReqNickname
	(*ReqAvatar)(nil),           // 5: github.com.pinealctx.whois.api.pb.ReqAvatar
	(*ReqUserKey)(nil),          // 6: github.com.pinealctx.whois.api.pb.ReqUserKey
	(*ReqMobileKey)(nil),        // 7: github.com.pinealctx.whois.api.pb.ReqMobileKey
	(*RspUser)(nil),             // 8: github.com.pinealctx.whois.api.pb.RspUser
	(*RspMobile)(nil),           // 9: github.com.pinealctx.whois.api.pb.RspMobile
	(*RspUserInfo)(nil),         // 10: github.com.pinealctx.whois.api.pb.RspUserInfo
}
var file_whois_proto_depIdxs = []int32{
	8,  // 0: github.com.pinealctx.whois.api.pb.RspUserInfo.user:type_name -> github.com.pinealctx.whois.api.pb.RspUser
	9,  // 1: github.com.pinealctx.whois.api.pb.RspUserInfo.mobiles:type_name -> github.com.pinealctx.whois.api.pb.RspMobile
	0,  // 2: github.com.pinealctx.whois.api.pb.UserMod.SignInByMobile:input_type -> github.com.pinealctx.whois.api.pb.ReqMobile
	1,  // 3: github.com.pinealctx.whois.api.pb.UserMod.SignInByWechatOpen:input_type -> github.com.pinealctx.whois.api.pb.ReqWechat
	1,  // 4: github.com.pinealctx.whois.api.pb.UserMod.SignInByWechatMiniApp:input_type -> github.com.pinealctx.whois.api.pb.ReqWechat
	2,  // 5: github.com.pinealctx.whois.api.pb.UserMod.BindMobileByWechatOpen:input_type -> github.com.pinealctx.whois.api.pb.ReqWechatBindMobile
	2,  // 6: github.com.pinealctx.whois.api.pb.UserMod.BindMobileByWechatMiniApp:input_type -> github.com.pinealctx.whois.api.pb.ReqWechatBindMobile
	4,  // 7: github.com.pinealctx.whois.api.pb.UserMod.UpdateNickname:input_type -> github.com.pinealctx.whois.api.pb.ReqNickname
	5,  // 8: github.com.pinealctx.whois.api.pb.UserMod.UpdateAvatar:input_type -> github.com.pinealctx.whois.api.pb.ReqAvatar
	3,  // 9: github.com.pinealctx.whois.api.pb.UserAdmin.SetMobileUID:input_type -> github.com.pinealctx.whois.api.pb.ReqMobileUID
	6,  // 10: github.com.pinealctx.whois.api.pb.UserAdmin.GetUserInfoByID:input_type -> github.com.pinealctx.whois.api.pb.ReqUserKey
	7,  // 11: github.com.pinealctx.whois.api.pb.UserAdmin.GetUserInfoByMobile:input_type -> github.com.pinealctx.whois.api.pb.ReqMobileKey
	10, // 12: github.com.pinealctx.whois.api.pb.UserMod.SignInByMobile:output_type -> github.com.pinealctx.whois.api.pb.RspUserInfo
	10, // 13: github.com.pinealctx.whois.api.pb.UserMod.SignInByWechatOpen:output_type -> github.com.pinealctx.whois.api.pb.RspUserInfo
	10, // 14: github.com.pinealctx.whois.api.pb.UserMod.SignInByWechatMiniApp:output_type -> github.com.pinealctx.whois.api.pb.RspUserInfo
	10, // 15: github.com.pinealctx.whois.api.pb.UserMod.BindMobileByWechatOpen:output_type -> github.com.pinealctx.whois.api.pb.RspUserInfo
	10, // 16: github.com.pinealctx.whois.api.pb.UserMod.BindMobileByWechatMiniApp:output_type -> github.com.pinealctx.whois.api.pb.RspUserInfo
	10, // 17: github.com.pinealctx.whois.api.pb.UserMod.UpdateNickname:output_type -> github.com.pinealctx.whois.api.pb.RspUserInfo
	10, // 18: github.com.pinealctx.whois.api.pb.UserMod.UpdateAvatar:output_type -> github.com.pinealctx.whois.api.pb.RspUserInfo
	10, // 19: github.com.pinealctx.whois.api.pb.UserAdmin.SetMobileUID:output_type -> github.com.pinealctx.whois.api.pb.RspUserInfo
	10, // 20: github.com.pinealctx.whois.api.pb.UserAdmin.GetUserInfoByID:output_type -> github.com.pinealctx.whois.api.pb.RspUserInfo
	10, // 21: github.com.pinealctx.whois.api.pb.UserAdmin.GetUserInfoByMobile:output_type -> github.com.pinealctx.whois.api.pb.RspUserInfo
	12, // [12:22] is the sub-list for method output_type
	2,  // [2:12] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_whois_proto_init() }
func file_whois_proto_init() {
	if File_whois_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_whois_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqMobile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whois_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqWechat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whois_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqWechatBindMobile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whois_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqMobileUID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whois_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqNickname); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whois_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqAvatar); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whois_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqUserKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whois_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqMobileKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whois_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whois_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspMobile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_whois_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RspUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_whois_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_whois_proto_goTypes,
		DependencyIndexes: file_whois_proto_depIdxs,
		MessageInfos:      file_whois_proto_msgTypes,
	}.Build()
	File_whois_proto = out.File
	file_whois_proto_rawDesc = nil
	file_whois_proto_goTypes = nil
	file_whois_proto_depIdxs = nil
}
